{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mg\\\\Desktop\\\\react full stack\\\\my-app\\\\src\\\\pages\\\\ArticlesPage.js\";\nimport React from 'react';\nimport articles from './article-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlesPage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articles.find(article => article.name == name);\n  if (!article) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Artile Does not exist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is an article \", name, \" page\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ArticlesPage;\nexport default ArticlesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesPage\");","map":{"version":3,"sources":["C:/Users/mg/Desktop/react full stack/my-app/src/pages/ArticlesPage.js"],"names":["React","articles","ArticlesPage","match","name","params","article","find"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAME,OAAO,GAAGL,QAAQ,CAACM,IAAT,CAAeD,OAAD,IAAaA,OAAO,CAACF,IAAR,IAAgBA,IAA3C,CAAhB;AACA,MAAI,CAACE,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEd,sBACE;AAAA,4BACE;AAAA,wCAAwBF,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAZD;;KAAMF,Y;AAcN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport articles from './article-content';\n\nconst ArticlesPage = ({match}) => {\n  const name = match.params.name;\n\n  const article = articles.find((article) => article.name == name);\n  if (!article) return <h1> Artile Does not exist</h1>;\n\n  return (\n    <>\n      <h1>This is an article {name} page</h1>\n      <p>{}</p>\n    </>\n  );\n};\n\nexport default ArticlesPage;\n"]},"metadata":{},"sourceType":"module"}