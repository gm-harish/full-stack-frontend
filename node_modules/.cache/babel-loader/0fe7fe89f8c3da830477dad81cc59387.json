{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mg\\\\Desktop\\\\react full stack\\\\my-app\\\\src\\\\pages\\\\ArticlesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport articles from './article-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlesPage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const [articlesInfo, setArticlesInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  const article = articles.find(article => article.name == name);\n  if (!article) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Artile Does not exist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This is an article \", name, \" page\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" upvotes \", articles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlesPage, \"GDft1oACTXz5bmjejAiBqtN/XsI=\");\n\n_c = ArticlesPage;\nexport default ArticlesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesPage\");","map":{"version":3,"sources":["C:/Users/mg/Desktop/react full stack/my-app/src/pages/ArticlesPage.js"],"names":["React","useState","articles","ArticlesPage","match","name","params","articlesInfo","setArticlesInfo","upvotes","comments","article","find","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAChC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC;AAACQ,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAhD;AAEA,QAAMC,OAAO,GAAGT,QAAQ,CAACU,IAAT,CAAeD,OAAD,IAAaA,OAAO,CAACN,IAAR,IAAgBA,IAA3C,CAAhB;AACA,MAAI,CAACM,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEd,sBACE;AAAA,4BACE;AAAA,wCAAwBN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIM,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BAAaX,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAfD;;GAAMC,Y;;KAAAA,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport articles from './article-content';\n\nconst ArticlesPage = ({match}) => {\n  const name = match.params.name;\n\n  const [articlesInfo, setArticlesInfo] = useState({upvotes: 0, comments: []});\n\n  const article = articles.find((article) => article.name == name);\n  if (!article) return <h1> Artile Does not exist</h1>;\n\n  return (\n    <>\n      <h1>This is an article {name} page</h1>\n      <p>{article.title}</p>\n      <p> upvotes {articles}</p>\n    </>\n  );\n};\n\nexport default ArticlesPage;\n"]},"metadata":{},"sourceType":"module"}